#!/usr/bin/env python3
import asyncio
import sys
import os
sys.path.append('.')
from test2 import getTTS

async def test_full_script():
    """Test the complete podcast script we generated"""
    
    script = {
        'Intro1': '''ุงูููุฏู: ุณูุงู ุนูููู ูุง ุฌูุงุนุฉุ ูุจุฑูู ุฃูุชู ููุง ูุน ุจุฑูุงูุฌูุง ุงูุฌุฏูุฏ <happy>
ุงูุถูู: ุดูุฑุง ุญุงูู ุงูููุฏูุ ุณุนูุฏ ุฅููู ุฃูุง ุถูู <happy>
ุงูููุฏู: ุฒูู ุฒูู ุจุณ ูุจู ูู ุดูุกุ ูุด ุฑุงูู ุฅุฐุง ุจุฏููุง ุจุดููุฉ ุฎูููุฉ ุนู ุงูุจุฑูุงูุฌุ
ุงูุถูู: ุทุจุนุง ูุงุดูุ ููุง ุฃุญุณู ูู ูุฏุง ุจุฏุงูุฉ
ุงูููุฏู: ุฃููุงุ ูุฏุง ุจุฑูุงูุฌ ุชุนูููู ูููุชุน ููุญู ุงูููู ุญูู ุงูุฃุทุนูุฉ ุงูุชูููุฏูุฉ <excited>
ุงูุถูู: ุฃูุชู ุฃุคูุฏ ุงูููุถูุน ูุญุงุณุฉ ูุฃู ุงูุฃูู ุฌุฒุก ููู ูู ุซูุงูุชูุง
ุงูููุฏู: ุจุงูุถุจุทุ ูุฃูุง ุญููุฉ ุนู ุงููุจุณุฉ ุงูุณุนูุฏูุฉ ุงูุดููุฑุฉ''',
        
        'Intro2': '''ุงูููุฏู: ูุฑุญุจุง ุจูู ุฌููุนุง! ุงูููู ุญููุงุชูุง ุฎุงุตุฉ ุฌุฏุง! <happy>
ุงูุถูู: ุดูุฑุง ููุ ุฃูุง ูุชุญูุณุฉ ูุฃูู ููุง <happy>
ุงูููุฏู: ุจุงูุชุฃููุฏุ ุฏุนูุง ูุฑุญุจ ุจุทุงูุจุชูุง ุงูุนุฒูุฒุฉ <happy>
ุงูุถูู: ูุนุง ูู ูู ุฃุฑูุน ุงููุงุณ ุงูุฐู ุนุฑูุชูู <happy>
ุงูููุฏู: ุฃูุชู ูุจู ูู ุดูุกุ ููู ุชุนุฑูุช ุนูููุงุ
ุงูุถูู: ููุช ุฃุจุญุซ ุนู ูุตูุงุช ูุฏููุฉุ ุตุงุฏูุชูุง ุตุฏูุฉ <surprised>
ุงูููุฏู: ูุงุง! ูุฐุง ุฑุงุฆุนุ ุทูุจ ุฃุฎุจุฑููุง ุนููุง ุฃูุซุฑ
ุงูุถูู: ุญุณูุงุ ุงุณููุง ูุงุทูุฉุ ุนูุฑูุง ูุงู ุงูุณุชูู ุจุณ ููุจูุง ุตุบูุฑ <happy>
ุงูููุฏู: ูุฑุญุจุง ุจูู ูุงุทูุฉุ ูู ุณุนุฏุงุก ุจุฃู ุชูููู ูุนูุง <happy>''',
        
        'Con': '''ุงูููุฏู: ููุง ุณูุงูุ ููุง ุฃุญูู ููุง ุชุนูููุงู ุนู ุฃุทุนูุชูุง ุงูุนุฑุจูุฉ <happy>
ุงูุถูู: ูุนุง ูู ุทุจุน ูุตุฉ ูุฐูุฑูุงุช
ุงูููุฏู: ุตุญูุญุ ูุงุฒู ูุญุงูุธ ุนูููุง ููููููุง ููุฃุฌูุงู ุงูุฌุฏูุฏุฉ
ุงูุถูู: ุจุงูุง ุดู ุชุนููููู ูู ูุณุชูุชุนูู ุจูุง <happy>
ุงูููุฏู: ูุฃูุช ูู ุนูุฏู ูุตูุฉ ุชุญุจูู ูุดุงุฑูุชูุง ูุนูุง ูุฑุฉ ุฃุฎุฑูุ
ุงูุถูู: ููููุ ุฑุจูุง ุงููุจุณุฉ ุงูุณุนูุฏูุฉ ุงูุดููุฑุฉ <smiling>
ุงูููุฏู: ุฃุคุคููุฏ ุฃุคูุฏุ ูุฐู ููุฑุฉ ุนุธููุฉ
ุงูุถูู: ูููู ุชููู ุญููุฉ ููุณุชูุจููุฉ ูุซูุฑุฉ
ุงูููุฏู: ูุทุนุงูุ ุณุฃุญุจ ุฐููุ ุดูุฑุง ุฌุฒููุง ูููุฌูุฏ ูุนูุง ุงูููู
ุงูุถูู: ุฃูู ุดูุฑ ูู ุฃูุถุงุ ูุงู ููุช ุฑุงุฆุน
ุงูููุฏู: ูุงููู ููุฏูููุ ุฏุงุฆูุง ุงุณุชูุชุน ุจุชุนูู ุงูุฌุฏูุฏ ุนู ุชุฑุงุซูุง ุงูุบูู
ุงูุถูู: ุขุขู ุฅูู ุงูููุงุก ูู ุงูุญููุฉ ุงููุงุฏูุฉ ุจุฅุฐู ุงููู
ุงูููุฏู: ุญุชู ููุชูู ุซุงููุฉุ ุญุงูุธูุง ุนูู ุญุจ ุงูุทุนุงู ูุงูุชุฌุฑุจุฉ ูุงูุงุณุชูุดุงู'''
    }
    
    print("๐๏ธ Starting full podcast audio generation...")
    print(f"Script sections: {list(script.keys())}")
    
    try:
        result = await getTTS(script)
        print(f"โ SUCCESS! Audio file created: {result}")
        
        if result and os.path.exists(result):
            file_size = os.path.getsize(result) / (1024 * 1024)  # MB
            print(f"๐ File size: {file_size:.2f} MB")
            print(f"๐ File location: {result}")
        else:
            print("โ File not found or path is None")
            
    except Exception as e:
        print(f"โ Error: {str(e)}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_full_script())
